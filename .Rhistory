setwd("~/Desktop/QLD_cartogram_fun")
library(rgdal)
library(sp)
library(rgeos)
library(dplyr)
library(RColorBrewer)
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
proj4string(LGAs) # Don't fully understand what this is!
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
# Some ugly manual wrangling so LGA names in the Shapefile and LGA names in the population data match
pop$LGA <- gsub("\\(S\\)", "Shire", pop$LGA)
pop$LGA <- gsub("\\(C\\)", "City", pop$LGA)
pop$LGA <- gsub("\\(R\\)", "Regional", pop$LGA)
pop$LGA <- gsub("\\(T\\)", "Town", pop$LGA)
pop$LGA <- gsub("-", " ", pop$LGA)
pop[!pop$LGA %in% LGAs@data$LGA, "LGA"] <- gsub("Shire", "Aboriginal Shire", pop[!pop$LGA %in% LGAs@data$LGA, "LGA"])
# Merge the population data with the data in the shapefile
LGAs@data <- full_join(LGAs@data, pop, by = "LGA")
# Add a population density variable
LGAs@data <- mutate(LGAs@data, pop_density_2016 = 2016 / CA_AREA_SQ)
class(LGAs)
# Setting up a colour palette
colorRampPalette(brewer.pal(9,"Purples"))(100)
hist(LGAs@data$LGA)
hist(LGAs@data$pop_density_2016)
min(LGAs@data$pop_density_2016)
max(LGAs@data$pop_density_2016)
min(LGAs@data$pop_density_2016) * 1000
min(LGAs@data$pop_density_2016) * 100
min(LGAs@data$pop_density_2016) / max(LGAs@data$pop_density_2016) * 100
median(max(LGAs@data$pop_density_2016))
median(LGAs@data$pop_density_2016)
median(LGAs@data$pop_density_2016) /max(LGAs@data$pop_density_2016) * 100
hist(log(LGAs@data$pop_density_2016))
hist(-log(LGAs@data$pop_density_2016))
LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016)
hist(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016))
hist(-log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016)))
-log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016))
log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016))
-log(LGAs@data$pop_density_2016 / -log(max(LGAs@data$pop_density_2016))
)
library(ggplot2)
logs <- -log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016))
logs / max(logs) * 100
hist(logs / max(logs) * 100)
# Setting up a colour palette
pal <- colorRampPalette(brewer.pal(9,"Purples"))(100)
pal
round(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016))
round(-log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016)))
round(-log2(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016)))
round(-log10(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016)))
-log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016))
-log(LGAs@data$pop_density_2016)
-log(LGAs@data$pop_density_2016) / max(-log(LGAs@data$pop_density_2016))
hist(-log(LGAs@data$pop_density_2016))
library(devtools)
?spplot
spplot(LGAs)
plot(LGAs)
my.palette <- brewer.pal(n = 6, name = "Purples")
spplot(LGAs, "pop_density_2016", col.regions = my.palette)
my.palette <- colorRampPalette("purples")round(max(LGAs@data$pop_density_2016))
my.palette <- colorRampPalette("purples") round(max(LGAs@data$pop_density_2016))
my.palette <- brewer.pal(n = 9, name = "Purples")
pal <- colorRampPalette(brewer.pal(9, "Purples"))(180)
spplot(LGAs, "pop_density_2016", col.regions = pal)
spplot(LGAs, -log(LGAs@data$pop_density_2016 / max(LGAs@data$pop_density_2016)), col.regions = pal)
?select
select(LGAs@data, LGA, pop_density_2016)
max(LGAs$pop_density_2016)
min(LGAs$pop_density_2016)
min(LGAs$pop_density_2016) * 100
min(LGAs$pop_density_2016) * 1000
min(LGAs$CA_AREA_SQ)
min(2016)
min(LGAs$2016)
min(LGAs@data$2016)
LGAs@data$`2016`
select(LGAs@data, LGA, 2016, CA_AREA_SQ)
select(LGAs@data, LGA, `2016`, CA_AREA_SQ)
296 / 11.73487
100 / 10
# Add a population density variable
LGAs@data <- mutate(LGAs@data, pop_density_2016 = `2016` / CA_AREA_SQ)
class(LGAs@data$`2016`)
pop[-"LGA",]
pop[!"LGA",]
pop[2:ncol(pop),]
pop[, 2:ncol(pop]
pop[, 2:ncol(pop)]
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
proj4string(LGAs) # Don't fully understand what this is!
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
pop[, 2:ncol(pop)] <- as.numeric(pop[, 2:ncol(pop)])
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
proj4string(LGAs) # Don't fully understand what this is!
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
class(pop[,2:ncol(pop)])
pop[, 2:ncol(pop)] <- sapply(pop[, 2:ncol(pop)], as.numeric)
class(pop[,2016])
class(pop[,"2016"])
# Some ugly manual wrangling so LGA names in the Shapefile and LGA names in the population data match
pop$LGA <- gsub("\\(S\\)", "Shire", pop$LGA)
pop$LGA <- gsub("\\(C\\)", "City", pop$LGA)
pop$LGA <- gsub("\\(R\\)", "Regional", pop$LGA)
pop$LGA <- gsub("\\(T\\)", "Town", pop$LGA)
pop$LGA <- gsub("-", " ", pop$LGA)
pop[!pop$LGA %in% LGAs@data$LGA, "LGA"] <- gsub("Shire", "Aboriginal Shire", pop[!pop$LGA %in% LGAs@data$LGA, "LGA"])
# Merge the population data with the data in the shapefile
LGAs@data <- full_join(LGAs@data, pop, by = "LGA")
# Add a population density variable
LGAs@data <- mutate(LGAs@data, pop_density_2016 = `2016` / CA_AREA_SQ)
LGAs$pop_density_2016
select(LGAs@data, LGA, `2016`, CA_AREA_SQ, pop_density_2016)
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
head(pop)
class(pop$`1991`)
pop[, 2:ncol(pop)] <- sapply(pop[, 2:ncol(pop)], as.numeric(as.character))
for (col in 2:ncol(pop)) {
pop[ , col] <- as.numeric(as.character(pop[ , col]))
}
pop[, 2]
pop[, 3]
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
proj4string(LGAs) # Don't fully understand what this is!
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
for (col in 2:ncol(pop)) {
pop[ , col] <- as.numeric(as.character(pop[ , col]))
}
pop[,2]
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG3857/Local_Government_Areas.shp")
proj4string(LGAs) # Don't fully understand what this is!
proj4string(LGAs) # Don't fully understand what this is!
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
pop[,2]
as.numeric(as.character(pop[,2]))
gsub(",","",pop[,2])
class(gsub(",","",pop[,2]))
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", 1991:2016)
for (col in 2:ncol(pop)) {
pop[ , col] <- gsub(",", "", pop[ , col])
pop[ , col] <- as.numeric(pop[ , col])
}
class(pop$`1991`)
# Some ugly manual wrangling so LGA names in the Shapefile and LGA names in the population data match
pop$LGA <- gsub("\\(S\\)", "Shire", pop$LGA)
pop$LGA <- gsub("\\(C\\)", "City", pop$LGA)
pop$LGA <- gsub("\\(R\\)", "Regional", pop$LGA)
pop$LGA <- gsub("\\(T\\)", "Town", pop$LGA)
pop$LGA <- gsub("-", " ", pop$LGA)
pop[!pop$LGA %in% LGAs@data$LGA, "LGA"] <- gsub("Shire", "Aboriginal Shire", pop[!pop$LGA %in% LGAs@data$LGA, "LGA"])
# Merge the population data with the data in the shapefile
LGAs@data <- full_join(LGAs@data, pop, by = "LGA")
# Add a population density variable
LGAs@data <- mutate(LGAs@data, pop_density_2016 = `2016` / CA_AREA_SQ)
select(LGAs@data, LGA, `2016`, CA_AREA_SQ, pop_density_2016)
11997 / 7319.76194
min(LGAs$pop_density_2016)
297 / 94672.71164
min(LGAs$pop_density_2016) * 10
min(LGAs$pop_density_2016) * 100
min(LGAs$pop_density_2016) * 1000
min(LGAs$pop_density_2016) * 300
min(LGAs$pop_density_2016) * 500
min(LGAs$pop_density_2016) * 400
296 / 11.73487
min(LGAs$pop_density_2016) * 350
1 / 25.22
summary(LGAs$pop_density_2016)
1184215 / 1382.77629
hist(LGAs$pop_density_2016)
plot(density(LGAs$pop_density_2016))
str(LGAs)
head(LGAs)
class(LGAs)
head(select(LGAs@data, LGA, `2016`, CA_AREA_SQ, pop_density_2016))
summary(LGAs@data$pop_density_2016)
plot(density(LGAs@data$pop_density_2016))
select(LGAs@data, LGA, `2016`, CA_AREA_SQ, pop_density_2016)
1376.55776   /  4.191019e+02
576918 /   1376.55776
1296   /  31.76480
296  /   11.73487
pal <- colorRampPalette(brewer.pal(9, "Purples"))(857)
spplot(LGAs, "pop_density_2016", col.regions = pal, main = "Population density (even colour gradient)")
plot(density(log(LGAs$pop_density_2016)))
plot(density(log(LGAs$pop_density_2016 * 400)))
min(log(LGAs$pop_density_2016 * 400))
summary(log(LGAs$pop_density_2016 * 400))
summary(log(LGAs$pop_density_2016 * 350))
LGAs@data <- mutate(LGAs@data, log_pop_density = log(log(LGAs$pop_density_2016 * 350))) # population density is multiplied by 350 (in other words, the number of people per 350km^2) so all values are > 1 before the log transformation.
spplot(LGAs, "log_pop_density", col.regions = pal, main = "Population density (log scale)")
LGAs@data <- mutate(LGAs@data, log_pop_density = log(log(LGAs$pop_density_2016 * 350))) # population density is multiplied by 350 (in other words, the number of people per 350km^2) so all values are > 1 before the log transformation.
log.pal <- colorRampPalette(brewer.pal(9, "Purples"))(13)
spplot(LGAs, "log_pop_density", col.regions = pal, main = "Population density (log scale)")
log_pal <- colorRampPalette(brewer.pal(9, "Purples"))(13)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
summary(LGAs@data$log_pop_density)
LGAs@data <- mutate(LGAs@data, log_pop_density = log(LGAs$pop_density_2016 * 350)) # population density is multiplied by 350 (in other words, the number of people per 350km^2) so all values are > 1 before the log transformation.
summary(LGAs@data$log_pop_density)
log_pal <- colorRampPalette(brewer.pal(9, "Purples"))(13)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
log_pal <- colorRampPalette(brewer.pal(9, "Purples"))(14)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
log_pal <- colorRampPalette(brewer.pal(9, "Purples"))(16)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
log_pal <- colorRampPalette(brewer.pal(9, "Purples"))(15)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
log_pal <- colorRampPalette(brewer.pal(5, "Purples"))(13)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
LGAs@data <- mutate(LGAs@data, log_pop_density = log(LGAs$pop_density_2016 * 350)) # population density is multiplied by 350 (in other words, the number of people per 350km^2) so all values are > 1 before the log transformation.
plot(density(log_pop_density))
plot(density(LGAs$log_pop_density))
log_pal <- colorRampPalette(brewer.pal(9, "Purples"))(16)
spplot(LGAs, "log_pop_density", col.regions = log_pal, main = "Population density (log scale)")
?brewer.pal
library(rgdal)
library(sp)
library(rgeos)
library(dplyr)
library(devtools)
library(RColorBrewer)
install_github("omegahat/Rcartogram")
install_github('chrisbrunsdon/getcartr',subdir='getcartr')
# Load the newly installed packages
library(Rcartogram)
library(getcartr)
?quick.carto
LGAs_carto <- quick.carto(spdf = LGAs, v = "2016")
LGAs_carto <- quick.carto(spdf = LGAs, v = LGAs@data$`2016`)
spplot(LGAs_carto, "log_pop_density")
spplot(LGAs_carto, "2016")
spplot(LGAs_carto, `2016`)
spplot(LGAs_carto, "`2016`")
spplot(LGAs_carto, LGAs$`2016`)
spplot(LGAs, "2016", col.regions = pal)
LGAs@data$pop_2016 <- LGAs@data$`2016`
spplot(LGAs, "pop_2016", col.regions = pal)
paste0("pop_", 1991:2016)
library(rgdal)
library(sp)
library(rgeos)
library(dplyr)
library(devtools)
library(RColorBrewer)
# Read Shapefile
LGAs <- readOGR("Queensland_LGAs_EPSG4938/Local_Government_Areas.shp")
proj4string(LGAs) # Don't fully understand what this is!
# Read population data
pop <- read.csv("erp-lga-qld.csv", nrows = 78, skip = 5)
colnames(pop) <- c("LGA", paste0("pop_", 1991:2016))
#pop[, 2:ncol(pop)] <- sapply(pop[, 2:ncol(pop)], as.numeric(as.character))
for (col in 2:ncol(pop)) {
pop[ , col] <- gsub(",", "", pop[ , col])
pop[ , col] <- as.numeric(pop[ , col])
}
# Some ugly manual wrangling so LGA names in the Shapefile and LGA names in the population data match
pop$LGA <- gsub("\\(S\\)", "Shire", pop$LGA)
pop$LGA <- gsub("\\(C\\)", "City", pop$LGA)
pop$LGA <- gsub("\\(R\\)", "Regional", pop$LGA)
pop$LGA <- gsub("\\(T\\)", "Town", pop$LGA)
pop$LGA <- gsub("-", " ", pop$LGA)
pop[!pop$LGA %in% LGAs@data$LGA, "LGA"] <- gsub("Shire", "Aboriginal Shire", pop[!pop$LGA %in% LGAs@data$LGA, "LGA"])
# Merge the population data with the data in the shapefile
LGAs@data <- full_join(LGAs@data, pop, by = "LGA")
# Add a population density variable
LGAs@data <- mutate(LGAs@data, pop_density_2016 = pop_2016 / CA_AREA_SQ)
head(select(LGAs@data, LGA, pop_2016, CA_AREA_SQ, pop_density_2016))
summary(LGAs@data$pop_density_2016)
plot(density(LGAs@data$pop_density_2016))
pal <- colorRampPalette(brewer.pal(9, "Purples"))(100)
spplot(LGAs, "pop_density_2016", col.regions = pal, main = "Population density (even colour gradient)", col = "dimgrey")
LGAs@data <- mutate(LGAs@data, log_pop_density = log(LGAs$pop_density_2016))
plot(density(LGAs$log_pop_density))
spplot(LGAs, "log_pop_density", col.regions = pal, main = "Population density (log scale)", col = "dimgrey")
spplot(LGAs, "log_pop_density", col.regions = pal, main = "Population density (log scale)", col = "dimgrey")
# Load the newly installed packages
library(Rcartogram)
library(getcartr)
LGAs_carto <- quick.carto(spdf = LGAs, v = LGAs@data$pop_2016)
spplot(LGAs_carto, "pop_2016", col.regions = pal, col = "dimgrey",
main = "Population cartogram: Queensland LGAs")
spplot(LGAs_carto, "CA_AREA_SQ", col.regions = pal, col = "dimgrey",
main = "Population cartogram as choropleth of area")
LGAs@data <- mutate(LGAs@data, log_area = log(LGAs$CA_AREA_SQ))
LGAs_carto <- quick.carto(spdf = LGAs, v = LGAs@data$pop_2016)
spplot(LGAs_carto, "log_area", col.regions = pal, col = "dimgrey",
main = "Population cartogram as choropleth of area (log scale)")
LGAs@data <- mutate(LGAs@data, log_pop = log(LGAs$pop_2016))
LGAs_carto <- quick.carto(spdf = LGAs, v = LGAs@data$log_pop)
spplot(LGAs_carto, "pop_2016", col.regions = pal, col = "dimgrey",
main = "Log population cartogram: Queensland LGAs")
